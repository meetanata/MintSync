************************************
 MintSync (working title) Changelog
************************************
10:20 25/02/2012
================
Attempted to address issues with background navigation
	updating the password available indicator
Address regression that occurred on 03Dec2011
	that breaks (or removes entirely!) the autofetch option
Added data attribute (data-fulltext) to the td for the full input 
	text for the text nodes with ellipses added on 09/01/2012
Made the injected script message handling js use the data-fulltext
	attribute - related to above

20:54 09/01/2012
================
Client
------
Adding ellipses to the key td on popup retrieve
Tweaked input widths to make things fit better

21:18 07/01/2012
================
Client
------
Version 1.10!
Fixed issue with missing variable on the password matrix
Added CTRL+I shortcut for inject into page on the generate tab
Fixed issue with the inject button showing on the maximised popup
Added a y-axis scrollbar onto the password matrix to stop it from
	jumping around when the user filters the list

11:39 07/01/2011
================
Client
------
Slightly optimised the selectors on the password matrix filtering,
	reduced timeout
Overridden ctrl+f to put the cursor in the filter box instead of
	Opera's filter
The inject values popup now places focus on the input box so the
	user can press enter
Made the jQuery injection selectors slightly less efficient in order
	to handle both retrieve and save/generate tabs injection
Implemented Injection of values from the generate tab
	
22:36 25/12/2011
================
Client
------
Finishing the timeout forgetting functionality for crypto passwords
Added manual "forget saved password" option on the options

21:42 18/12/2011
================
Client
------
Implementing settings and handling for timeout on password memory for
	"per-browser-session" saves

23:06 14/12/2011
================
Client
------
Tweaking fonts to better support Linux platforms

19:21 08/12/2011
================
Client
------
Adding some more document.documentElement checks in Sizzle to prevent errors

19:16 07/12/2011
================
Client
------
Adding ctrl+d shortcut on the popup for 'add a row'
Implementing 25 character maximum on the input fields,
	displays <first>...<last> if > 25 characters now

18:41 06/12/2011
================
Client
------
Wrapped injected JS in function to isolate it from other code
Added max-height to the popup retrieve
Injected JS highlighter now stores the outline style when it highlights an input
Split Sizzle into a separate injected file
Patched sizzle.js:956 - if ( document.documentElement.compareDocumentPosition ) 
	to test for document.documentElement which doesn't always exist in injectedjs
Implemented handling for inputs without ids but with names

22:03 03/12/2011
================
Client
------
Probably Feature Complete for Version 1.0
	- styles need tweaking before release

Updated XML with version 1.0 update URL and version number

10:20 03/12/2011
================
Client
------
Added sizzle selector engine to the injected JS to help with the form roboting 
	- performance consequencies need to be profiled!
Added message channel between the popup and the injectedJS
Popup nolonger relies on the background process to get the current tab URL, 
	uses opera.bgprocess object instead
Implemented value injection into input boxes from the popup


02/12/2011
==========	
Client
------
Fixed context menu in the maximised popup
Changed the maximise icon to a different one

13:05 27/11/2011
================
Client
------
version 0.99
Moved the update XML file to use a directory structure I can control without SSS

12:34 27/11/2011
================
Client
------
Version 0.99 Beta
Added a "maximise" button to the popup which will open in a new window
Added links to the credentials list and options pages from the popup


12:11 02/11/2011
================
Client
------
Password exploding now is 1 based rather than 0 based

18:48 16/10/2011
================
Server
------
Configuration Changes - see README

Client
------
Reverting previous change switching from GET to POST

11:21 22/10/2011
================
Server
------
Altered Check and Retrieve verbs to support URL from both GET and POST 

Client
------
Altered Retrieval methods to send URLS via POST instead of GET (for very long URLS)

19:07 05/10/2011
================
Server
------
Implemented protection against overlapping LIKE patterned URLS
Added retrieve credentials by ID in addition to URL

Client
------
Implemented handling of 409 CONFLICT messages on rename
Implemented new method, getPasswordsByID to retrieve from auth.ID
Added alert to warn users they haven't changed the default server URL

23:09 02/20/2011
================
Server
------
Implemented methods to retrieve and update keySlot0 and keySlot0Hash

Client
------
Added functionality to change the cryptography password


09:06 02/10/2011
================
Server
------
Altered AddUser scripts to support new keySlot structure
Added retrieveKeySlot0 method

Client
------
Rewritten encryption system to use keySlot system and more efficiently use
256bit keys (now full range bytes rather than limited to printable characters)


00:06 02/10/2011
================
Server
------
Renamed password crypto database fields to keySlot0PassHash
Added new fields to prepare for keySlot system
Altered INSERT to stop users from adding overlapping URLS, including LIKE

Client
------
Retrieve now checks for exact match first and then checks for like matches after
Added unselectable elements allover the place on the popup


21:12 15/09/2011
================
Server
------
Implemented Fuzzy URL matches

Client 
------
Made Options automatically append a / on the end of the base URL if not entered 
Fixed issue with the cryptoPassword not being reset if entered incorrectly
Fixed issue with the cryptoPassword not working if set to remember per-dialog

07:23 10/09/2011
================
Server
------
Added User addition page and ability to lock the server-browser interface
Added check for consistent encryption password on setpassword
Altered PDO DNS to use a constant for easier swapping of database architecture
Refactored server interface to use basic templating system

Client
------
Implemented handling for consistent encryption password on set password


20:03 07/09/2011
================
Server
------
Added confirmCrypto action, to compare the cryptoHash with the passed one

Client
------
Added verifyCryptoPass method to MintSync Object
Added CheckCryptoPass Option

15:54 07/09/2011
================
Server
------
Changed the MIME type of the JSON to be application/json

Client
------
Implemented rudamentary "incorrect crypto password" handling
Disabled browser caching on the client

22:04 06/09/2011
================
Server
------
Altered to use X-MS-Authorisation header for compatibility with basic auth

Client
------
Version 0.6
Altered to use X-MS-Authorisation header for compatibility with basic auth
Fixed issue with callbacks being executed (jQuerytools event queueing)
Renamed Password Matrix to Credentials List
Made Client reset the saved credentials on error
Added some errors for incorrect credentials

17:15 04/09/2011
================

Server
------
Altered the "log" to be a smidge more self contained

Client
------
Attempting to figure out why the listURLS getAuthObject callback is being executed everytime any AJAX occurs on the password matrix. - quite a large outstanding issue

15:24 04/09/2011
================
Client
------
When changing the properties, the session-stored password is reset if currently stored

10:53 04/09/2011
================
Client
------
Refactored basically everything to use callbacks where input is required
Added lightboxes for encryption password prompts
Added lightboxes for authentication details

11:38 03/09/2011
================

Client
------
Implemented a form of digest authentication into client
Fixed the SHA-Base64 implementation (added padding character definition on line 19)

Server
------
Implemented first version of user authentication
Altered Schema to include userID

20:48 02/09/2011
================
Shifted ToDo List into Mantis

Client
------
Shifted rowsaltlength definition into a function ready for user-configurability
Added function ready to handle user authentication


19:43 01/09/2011
================

Client
------
Altered Extension to work with the REST-like structure
Improved error handling significantly
Updated the popup to use password inputs
update the popup to put retrieved credentials into the save/generate tab
Shrank the input boxes slightly to make space for scrollbars if required
Added option to set the generated password length
Added validation on URL content when saving

Server
------
Changed the server to use a more REST like structure

19:59 30/08/2011
================

Client
------
Refactored some of the JS and classes to make things smoother for the server UI styling
Renamed and moved some options around

Server
------
Added dbDump into the "ui"
Added check to block requests not using HTTPS


14:08 29/08/2011
================
Moved licensing information into a LICENCE file

Client
------
Added animation to the password matrix expanding option
Refactored css to put styling on main containers in common.css

Server
------
Added incredibly basic user interface to server component
Implemented CSV export of encrypted passwords


10:53 28/08/2011
================
Client
------
Implemented URL removal with rudimentary confirmation
Commented out CSS that was causing errors cluttering the console
Added ability to rehide passwords on the password matrix
Altered the InjectedJS to post a message to the background process with the current URL
Added option to store the password in the background process for per-browser-session password storage
Fixed bug in popup if the credentials are fetched more than once
Added options for the notification source to be set to Local Cache
Implemented local cache for URLS
Implemented variable update period for cache
Added instructions to the password matrix and tweaked the styles

Server
------
Implemented new verb "remove"
Refactored the server to make space for a user interface


08:08 27/08/2011
================
Client
------
Implemented display of URLS on password matrix
Refactored object encryption/decryption into the MintCrypto wrapper
Created globalfunctions.js to hold self-contained functions that are required in multiple places
Implemented password matrix retrieval
Preliminary implementation of the matrix filtering - this is slow, but it'll suffice for now
Removed text-shadow from the password matrix page as it was making things incredibly slow
Added doubleclick handler to call renameURL method in MintSync object
Added make proportional to width button (|<->|) to password matrix page
Added bin icon to the password matrix to implement deletion at some point
Fixed issue with the table body being appended to multiple times with multiple clicks
Added large loading icon to the password matrix

Server
------
Implemented new verb "list" - returns all URLS
Implemented new verb "rename" - renames the URL with the correct ID to the newURL

19:40 26/08/2011
================
Client
------
Forced the button's green text to not be displayed if notification is off (fixing the affiliated bug)
Added ctrl+g for generate password
Created Password Matrix pages - functionality still to be implemented


Server
------
Implemented verb-specific logging options
Altered dbDump file to htmlentities


19:54 25/08/2011
================
Client
------
Created Changelog file
Unticked Force update when the AJAX save request returns
Added Option for indicate if password is available
Implemented optional notification if password is available

Server
------
Implemented new server verb: "check"
Addressed Bug with "allow override" and saving if the URL doesn't exist
Implemented optional serverside logging